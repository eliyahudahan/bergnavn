"""empty message

Revision ID: 68429fc567a8
Revises: 
Create Date: 2025-05-01 23:06:52.544162

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '68429fc567a8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payments')
    op.drop_table('bookings')
    with op.batch_alter_table('cruises', schema=None) as batch_op:
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=150),
               nullable=False)
        batch_op.alter_column('departure_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=False)
        batch_op.alter_column('return_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_column('destination')
        #batch_op.drop_column('name')
        batch_op.drop_column('status')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date_created', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_admin', sa.Boolean(), nullable=True))
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.String(length=150),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=200),
               existing_nullable=False,
               existing_server_default=sa.text("''::character varying"))
        batch_op.drop_column('created_at')
        batch_op.drop_column('birth_date')
        batch_op.drop_column('role')
        batch_op.drop_column('full_name')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('full_name', sa.VARCHAR(length=120), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('birth_date', sa.DATE(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False))
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=128),
               existing_nullable=False,
               existing_server_default=sa.text("''::character varying"))
        batch_op.alter_column('username',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=80),
               existing_nullable=False)
        batch_op.drop_column('is_admin')
        batch_op.drop_column('is_verified')
        batch_op.drop_column('date_created')

    with op.batch_alter_table('cruises', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('destination', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('return_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=True)
        batch_op.alter_column('departure_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=False)
        batch_op.alter_column('title',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=100),
               nullable=True)

    op.create_table('bookings',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('bookings_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cruise_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('booking_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cruise_id'], ['cruises.id'], name='bookings_cruise_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='bookings_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='bookings_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('payments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('booking_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('payment_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name='payments_booking_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='payments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='payments_pkey')
    )
    # ### end Alembic commands ###